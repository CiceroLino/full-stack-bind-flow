version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/dockerfile
      target: development
    ports:
      - '3000:3000'
    depends_on:
      - auth-microservice
      - payments-microservice
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  auth-microservice:
    build:
      context: .
      dockerfile: ./apps/auth-microservice/dockerfile
      target: development
    ports:
      - '3001:3001'
    environment:
      - KAFKA_BROKER=kafka:9092
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  payments-microservice:
    build:
      context: .
      dockerfile: ./apps/payments-microservice/dockerfile
      target: development
    ports:
      - '3002:3002'
    environment:
      - KAFKA_BROKER=kafka:9092
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3-debian-10'
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-net
  kafka:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - app-net

networks:
  app-net:
    driver: bridge
